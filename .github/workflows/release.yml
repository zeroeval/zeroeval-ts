name: 📦 Release TypeScript SDK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

jobs:
  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: |
          npm run lint
          npm run test -- --run
          npm run build

      - name: 🔖 Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📌 Version: $VERSION"

      - name: 📝 Update package version
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json package-lock.json
          git commit -m "chore: release v${{ steps.version.outputs.version }}" || echo "No changes to commit"

      - name: 📦 Create release package
        run: npm pack

      - name: 🏷️ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          body: |
            ## 🚀 TypeScript SDK v${{ steps.version.outputs.version }}

            ### 📦 Installation
            ```bash
            npm install zeroeval@${{ steps.version.outputs.version }}
            ```

            ### 📝 Changelog
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          files: |
            zeroeval-*.tgz
          prerelease: ${{ github.event.inputs.prerelease || false }}
          generate_release_notes: true

      - name: 📤 Publish to npm
        if: github.event_name == 'push' || github.event.inputs.prerelease == false
        run: |
          npm publish zeroeval-*.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📤 Publish pre-release to npm
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.prerelease == true
        run: |
          npm publish zeroeval-*.tgz --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🎉 Release Summary
        run: |
          echo "## 🎉 Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Pre-release**: ${{ github.event.inputs.prerelease || false }}" >> $GITHUB_STEP_SUMMARY
          echo "- **npm Package**: [zeroeval@${{ steps.version.outputs.version }}](https://www.npmjs.com/package/zeroeval/v/${{ steps.version.outputs.version }})" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Release**: [v${{ steps.version.outputs.version }}](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }})" >> $GITHUB_STEP_SUMMARY
